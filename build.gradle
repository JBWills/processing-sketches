plugins {
    id 'idea'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.31'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.31'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    maven { url "https://repo.osgeo.org/repository/release" }
    mavenCentral()
    maven { url 'https://jcenter.bintray.com/' }
    maven { url 'https://jitpack.io' }
}
def arrow_version = "0.13.1"
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlin:kotlin-test-junit:1.4.31"
    implementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    implementation 'org.junit.jupiter:junit-jupiter-engine'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.1.0"
    implementation group: 'com.github.micycle1', name: 'processing-core-4', version: '4.0.3'
    implementation group: 'ca.pjer', name: 'ekmeans', version: '2.0.0'
    implementation group: 'org.openpnp', name: 'opencv', version: '3.4.2-0'
    implementation "io.arrow-kt:arrow-core:$arrow_version"
    implementation "org.deeplearning4j:deeplearning4j-core:1.0.0-M1"
    implementation "org.nd4j:nd4j-native-platform:1.0.0-M1"
    // https://mvnrepository.com/artifact/org.geotools/gt-process
    implementation group: 'org.geotools', name: 'gt-process', version: '25.1'
    // https://mvnrepository.com/artifact/org.geotools/gt-process-raster
    implementation group: 'org.geotools', name: 'gt-process-raster', version: '25.1'
    // https://mvnrepository.com/artifact/org.geotools/gt-geojson
    implementation group: 'org.geotools', name: 'gt-referencing', version: '25.1'
    // https://mvnrepository.com/artifact/org.geotools/gt-geojson
    implementation group: 'org.geotools', name: 'gt-epsg-hsql', version: '25.1'
    // https://mvnrepository.com/artifact/org.geotools/gt-geojson
    implementation group: 'org.geotools', name: 'gt-geojson', version: '25.1'
    // https://mvnrepository.com/artifact/org.geotools/gt-geotiff
    implementation group: 'org.geotools', name: 'gt-geotiff', version: '25.1'
    // https://mvnrepository.com/artifact/org.apache.xmlgraphics/batik-svggen
    implementation group: 'org.apache.xmlgraphics', name: 'batik-svggen', version: '1.14'
    // https://mvnrepository.com/artifact/com.github.axet/TarsosDSP
    implementation 'com.github.axet:TarsosDSP:2.4-1'

    // https://mvnrepository.com/artifact/org.apache.flink/flink-streaming-java
    compileOnly group: 'org.apache.flink', name: 'flink-streaming-java_2.12', version: '1.13.1'
    testImplementation(
            'org.assertj:assertj-core:3.12.2',
            'org.junit.jupiter:junit-jupiter-api:5.4.2'
    )
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.2')
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.4.31"

    /// LOCAL JARS BELOW
    // This is where we load controlP5 and processing.svg, neither of which have maven dists.
    implementation fileTree(dir: 'third-party', include: '/**/*.jar')
}

sourceSets {
    main.java.srcDirs += 'third-party-java'
    main.kotlin.srcDirs += 'src'
    main.kotlin.srcDirs += 'third-party'
}

test {
    useJUnitPlatform()
}
